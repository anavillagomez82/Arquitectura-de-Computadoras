2)
Observaciones
El programa Upcase.asm recibe una cadena de texto ingresada por el usuario 
y convierte las letras minúsculas a mayúsculas. 
Al ensamblar en MARS se observa que usa syscall para leer la cadena (servicio 8) 
y para imprimir la nueva cadena (servicio 4). 
También se usan comparaciones para verificar si un carácter está en el rango de 
‘a’ a ‘z’ y, si lo está, se resta 32 en ASCII para obtener la versión en mayúscula.

Pseudoinstrucciones detectadas:
- li $v0, 8 → se traduce como addi $v0, $zero, 8
- li $v0, 4 → se traduce como addi $v0, $zero, 4
- move $t0, $a0 → se traduce como addu $t0, $a0, $zero
- bge, ble, blt → se traducen con slt + branch (igual que en Fibonacci)

En ejecución se puede observar que el programa recorre cada carácter de la cadena 
y modifica solo los que son letras minúsculas, dejando los demás sin cambios.

Diagrama de flujo
Inicio → leer cadena → 
recorrer caracteres uno por uno:
   si carácter >= 'a' y carácter <= 'z':
       carácter = carácter - 32
   avanzar al siguiente carácter
repetir hasta fin de cadena
→ imprimir cadena modificada
→ fin

Pseudocódigo
leer cadena
para cada carácter c en la cadena:
if c >= 'a' and c <= 'z':
c = c - 32
imprimir cadena
fin
